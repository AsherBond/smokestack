<p id="notice"><%= notice %></p>
<b>Description:</b> <%= @smoke_test.description %>
<br/>
<b>Created at:</b> <%= timestamp(@smoke_test.created_at.in_time_zone) %>
<br/>
<b>Updated at:</b> <%= timestamp(@smoke_test.created_at.in_time_zone) %>
<br/>

<hr/>
<% @smoke_test.package_builders.each do |builder| %>
<% if not is_builder_stock(builder) then %>
<% builder_type = builder.type.chomp('PackageBuilder').downcase %>
<h4><%= builder_type.upcase %> Package Builder</h4>
<b>URL:</b> <%= builder.url %>
<br/>
<% if not builder.branch.blank? then %>
<b>Branch:</b><%= builder.branch %>
<br/>
<% end %>
<b>Merge trunk:</b><%= yes_no(builder.merge_trunk) %>
<br/>
<b>Revision (most recent):</b>
<% if @smoke_test.most_recent_job_group and @smoke_test.most_recent_job_group.most_recent_job %>
    <%= @smoke_test.most_recent_job_group.most_recent_job.send("#{builder_type}_revision") %>
<% end %>
<% end #end stock builder %>
<% end # end package_builders %>

<% @smoke_test.config_modules.each do |conf_mod| %>
<% if not is_config_module_stock(conf_mod) then %>
<% conf_mod_type = conf_mod.type.chomp('ConfigModule').downcase %>
<h4><%= conf_mod_type.upcase %> Config Module</h4>
<b>URL:</b> <%= conf_mod.url %>
<br/>
<% if not conf_mod.branch.blank? then %>
<b>Branch:</b><%= conf_mod.branch %>
<br/>
<% end %>
<b>Merge trunk:</b><%= yes_no(conf_mod.merge_trunk) %>
<br/>
<b>Revision (most recent):</b>
<% if @smoke_test.most_recent_job_group and @smoke_test.most_recent_job_group.most_recent_job %>
    <%= @smoke_test.most_recent_job_group.most_recent_job.send("#{conf_mod_type}_conf_module_revision") %>
<% end %>
<% end #end stock conf_mod %>
<% end # end config_modules %>
<hr/>

<% @jobs = Job.find(:all, :select => "id, status, type, job_group_id, nova_revision, glance_revision, keystone_revision, swift_revision, cinder_revision, neutron_revision, ceilometer_revision, heat_revision, nova_conf_module_revision, glance_conf_module_revision, keystone_conf_module_revision, swift_conf_module_revision, cinder_conf_module_revision, neutron_conf_module_revision, ceilometer_conf_module_revision, heat_conf_module_revision, msg, config_template_id, created_at, updated_at, start_time, finish_time, approved_by", :conditions => ["job_group_id IN (SELECT id from job_groups WHERE smoke_test_id = ?)", @smoke_test.id], :include => [:config_template,:approved_by_user, {:job_group => :smoke_test}], :order => "id DESC", :limit => 100) %>
<script type="text/javascript">

$(document).ready(function() {

    job_table_selectors();

});

</script>
<table id="jobs-table" class="data">
    <%= render(:partial => '/jobs/table', :locals => {:show_updated_at => true, :show_description => false}) %>
</table>

