#!/bin/bash
# Script to run Openstack VPC jobs

TMP_DIR=$(mktemp -d)

# Shell into the VPC group and print out the nova-common version from dpkg
function get_nova_pkg_revision {

	local NOVA_REVISION=$(
	rake ssh bash <<-EOF_BASH
	ssh -t nova1 2> /dev/null <<-EOF_NOVA
	echo ""
	echo ""
	dpkg -l nova-common | tail -n 1 | sed -e "s|.*\~\([^-]*\)\~.*|\1|"
	EOF_NOVA
	EOF_BASH
	)
	echo $NOVA_REVISION | tail -n 1 | sed -e "s|.* ||"

}

# Log to the job log and stdout
function fail {
	local MSG=$1
	echo "FAILURE_MSG=$MSG"
	exit 1
}

chef-vpc-toolkit -v || \
	fail "Please install the Chef VPC Toolkit."

cd $TMP_DIR
<% if job.smoke_test.branch_url then %>
	bzr branch "<%= job.smoke_test.branch_url %>" nova_source || \
		fail "Failed to checkout bzr branch."
	NOVA_REVISION=$(bzr version-info nova_source | grep revno | sed -e "s|revno: ||")
	[ -z "$NOVA_REVISION" ] && fail "Failed to obtain nova revision from bzr."
	echo "NOVA_REVISION=$NOVA_REVISION"

	<% if job.smoke_test.merge_trunk then %>
		cd nova_source || fail "Failed to cd into nova_source directory."
		bzr merge lp:nova || fail "Failed to merge lp:nova."
		cd $TMP_DIR
	<% end %>

<% end %>

git clone git@github.com:dprince/openstack_vpc.git && cd openstack_vpc || \
	fail "Failed to checkout openstack VPC."

trap "rake group:delete && cd /tmp && rm -Rf $TMP_DIR" INT TERM EXIT
if rake create; then
	rake chef:poll_clients CHEF_TIMEOUT=600 || \
		{ rake chef:tail_logs; fail "Chef client timeout."; }

<% if job.smoke_test.branch_url then %>
	rake nova:install_source SOURCE_DIR="$TMP_DIR/nova_source" SERVER_NAME=nova1
<% else %>
	echo "NOVA_REVISION=$(get_nova_pkg_revision)"
	[ -z "$NOVA_REVISION" ] && fail "Failed to obtain nova revision from dpkg."
<% end %>

	rake nova:smoke_tests SERVER_NAME=nova1

else
	rake chef:tail_logs
	echo "Failed to create server group."
	exit 1
fi
