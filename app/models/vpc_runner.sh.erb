#!/bin/bash
# Script to run Openstack VPC jobs

BRANCH_URL=$1
MERGE_TRUNK=$2
TMP_DIR=$(mktemp -d)

# Shell into the VPC group and print out the nova-common version from dpkg
function get_nova_pkg_revision {

	local NOVA_REVISION=$(
	rake ssh bash <<-EOF_BASH
	ssh -t nova1 2> /dev/null <<-EOF_NOVA
	echo ""
	echo ""
	dpkg -l nova-common | tail -n 1 | sed -e "s|.*bzr\([^-]*\).*|\1|"
	EOF_NOVA
	EOF_BASH
	)
	echo $NOVA_REVISION | tail -n 1 | sed -e "s|.* ||"

}

# Log to the job log and stdout
function fail {
	local MSG=$1
	echo "FAILURE_MSG=$MSG"
	exit 1
}

function get_source_code {
#FIXME: need to implement a Git version of this function as well.

	bzr branch "$BRANCH_URL" nova_source || \
		fail "Failed to checkout bzr branch."
	local NOVA_REVISION=$(bzr version-info nova_source | grep revno | sed -e "s|revno: ||")
	[ -z "$NOVA_REVISION" ] && fail "Failed to obtain nova revision from bzr."
	echo "NOVA_REVISION=$NOVA_REVISION"

	if [[ "$MERGE_TRUNK" == "true" ]]; then
		cd nova_source || fail "Failed to cd into nova_source directory."
		bzr merge lp:nova || fail "Failed to merge lp:nova."
		cd $TMP_DIR
	fi

}

function run_test {

chef-vpc-toolkit -v || \
	fail "Please install the Chef VPC Toolkit."

cd $TMP_DIR
[ -n "$BRANCH_URL" ] && get_source_code

git clone git@github.com:dprince/openstack_vpc.git && cd openstack_vpc || \
	fail "Failed to checkout openstack VPC."

trap "rake group:delete && cd /tmp && rm -Rf $TMP_DIR" INT TERM EXIT
if rake create; then
	rake chef:poll_clients CHEF_TIMEOUT=600 || \
		{ rake chef:tail_logs; fail "Chef client timeout."; }

if [ -z "$BRANCH_URL" ]; then
	local NOVA_REVISION=$(get_nova_pkg_revision)
	[ -z "$NOVA_REVISION" ] && fail "Failed to obtain nova revision from dpkg."
	echo "NOVA_REVISION=$NOVA_REVISION"
else
	rake nova:install_source SOURCE_DIR="$TMP_DIR/nova_source" \
		SERVER_NAME=nova1 || fail "Failed to install nova source."
fi

	rake nova:smoke_tests SERVER_NAME=nova1 || \
		{ rake nova:tail_logs SERVER_NAME=nova1; fail "Smoke tests failed."; }

else
	rake chef:tail_logs
	fail "Failed to create server group."
fi

}

run_test
